# Define comprehensive continuous integration (CI) checks to be
# performed periodically and on request.

name: comprehensive tests

on:
  schedule:
  - cron: 37 7 * * 1
  workflow_dispatch:
  pull_request:
    types: [labeled, opened, synchronize, reopened]
    branches:
    - main

permissions: {}

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:

  weekly:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    if: >-
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'run comprehensive tests')) ||
      (github.event_name == 'schedule' && github.repository == 'PlasmaPy/PlasmaPy' && github.ref == 'refs/heads/main')

    strategy:
      fail-fast: false

      matrix:
        include:

        - name: Tests, Python 3.14, doctests, macOS
          os: macos-latest
          python: '3.14'
          nox_session: tests-3.14(all)

        - name: Tests, Python 3.13, Windows
          os: windows-latest
          python: '3.13'
          nox_session: tests-3.13(all)

        - name: Tests, Python 3.12, Ubuntu
          os: ubuntu-latest
          python: '3.12'
          nox_session: tests-3.12(all)

        - name: Tests, Python 3.14, lowest direct dependencies, Windows
          os: windows-latest
          python: '3.14'
          nox_session: tests-3.14(lowest-direct)

        - name: Tests, Python 3.13, lowest direct dependencies, macOS
          os: macos-latest
          python: '3.13'
          nox_session: tests-3.13(lowest-direct)

        - name: Tests, Python 3.12, lowest direct dependencies, Ubuntu
          os: ubuntu-latest
          python: '3.12'
          nox_session: tests-3.12(lowest-direct)

        - name: Packaging, Python 3.13, Ubuntu
          os: ubuntu-latest
          python: '3.13'
          nox_session: build

        - name: Packaging, Python 3.12, macOS
          os: macos-latest
          python: '3.12'
          nox_session: build

        - name: Import PlasmaPy, Python 3.14, macOS
          os: macos-latest
          python: '3.14'
          nox_session: import

        - name: Import PlasmaPy, Python 3.12, Windows
          os: windows-latest
          python: '3.12'
          nox_session: import

        - name: Check MANIFEST.in
          os: ubuntu-latest
          python: '3.14'
          nox_session: manifest

        - name: Lint
          os: ubuntu-latest
          python: '3.14'
          nox_session: lint

    steps:

    - name: Checkout code
      uses: actions/checkout@v5
      with:
        persist-credentials: false

    - name: Install uv
      uses: astral-sh/setup-uv@v7
      with:
        python-version: ${{ matrix.python }}
        enable-cache: true
        cache-suffix: ${{ matrix.nox_session }}-${{ matrix.python }}-${{ runner.os }}

    - name: Run Nox session
      run: uvx nox -s '${{ matrix.nox_session }}'

    - name: Upload coverage reports to Codecov
      if: ${{ contains(matrix.nox_session, 'cov') }}
      uses: codecov/codecov-action@v5
      with:
        files: ./coverage.xml
        fail_ci_if_error: false
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
