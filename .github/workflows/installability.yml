name: Installability

on:
  workflow_dispatch:
    inputs:
      version:
        description: Version of PlasmaPy to install from conda-forge
        required: true
        default: 2025.10.0

permissions: {}

jobs:

  pip:
    name: pip, v${{ github.event.inputs.version }}, py${{ matrix.python-version }}, ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15

    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        python-version: ['3.12', '3.13', '3.14']

    steps:
    - uses: actions/setup-python@v6
      with:
        python-version: ${{ matrix.python-version }}

    - run: pip install --upgrade plasmapy==${{ github.event.inputs.version }}

    - name: Import PlasmaPy and print version
      run: python -c "import plasmapy; print(plasmapy.__version__)"

  uv:

    name: uv, ${{ github.event.inputs.version }}, py${{ matrix.python-version }}, ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15

    env:
      UV_SYSTEM_PYTHON: 1

    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        python-version: ['3.12', '3.13', '3.14']

    steps:
    - name: Install uv and set the Python version
      uses: astral-sh/setup-uv@v6
      with:
        python-version: ${{ matrix.python-version }}
        activate-environment: true

    - name: Install PlasmaPy from PyPI via uv
      run: uv pip install plasmapy==${{ github.event.inputs.version }}

    - name: Import PlasmaPy and print version
      run: python -c "import plasmapy; print(plasmapy.__version__)"

  conda-forge:

    name: conda-forge, ${{ github.event.inputs.version }}, py${{ matrix.python-version }}, ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15

    defaults:
      run:
        shell: bash -el {0}

    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        python-version: ['3.12', '3.13', '3.14']

    steps:
    - uses: conda-incubator/setup-miniconda@v3
      with:
        python-version: ${{ matrix.python_version }}
        channels: conda-forge

    - name: Install PlasmaPy from conda-forge
      run: conda install --yes plasmapy=${GITHUB_EVENT_INPUTS_VERSION}
      env:
        GITHUB_EVENT_INPUTS_VERSION: ${{ github.event.inputs.version }}

    - name: Import PlasmaPy and print version
      run: python -c "import plasmapy; print(plasmapy.__version__)"
