name: Mint release üç¨

on:
  workflow_dispatch:
    inputs:
      version:
        description: Date-based version üè∑Ô∏è
        required: true
        default: 2025.8.0rc1
      doi:
        description: Reserved DOI from Zenodo
        required: true
        default: 10.5281/zenodo.16747747

permissions:
  contents: write

defaults:
  run:
    shell: bash

jobs:

  tag:
    runs-on: ubuntu-latest

    steps:

    - name: Validate version input
      run: |
        if [[ ! ${VERSION} =~ ^2[0-9]{3}\.[0-9]+\.[0-9]+((a|b|rc)[0-9]+)?$ ]]; then
        echo "::error ::Provide a calendar version like `2025.8.0` (or `2025.8.0a0`, `2025.8.0b0`, or `2025.8.0rc1` for pre-releases)"
        exit 1
        fi
      env:
        VERSION: ${{ github.event.inputs.version }}

    - name: Validate DOI input
      run: |
        if [[ ! ${DOI} =~ ^10\.[0-9]{4,9}/.*$ ]]; then
        echo "::error ::Provide a valid DOI reserved from Zenodo."
        exit 1
        fi
      env:
        DOI: ${{ github.event.inputs.doi }}

    - name: Configure git
      run: |
        git config --global user.email "team@plasmapy.org"
        git config --global user.name "PlasmaPy Release Bot"

    - name: Checkout code
      uses: actions/checkout@v4
      with:
        persist-credentials: true
        fetch-depth: 0  # fetch all branches and tags prior to creating a new tag

    - name: Check out branch
      run: |
        git branch -f ${BRANCH}
        git switch ${BRANCH}
      env:
        BRANCH: prepare-v${{ github.event.inputs.version }}

    - name: Install the latest version of uv
      uses: astral-sh/setup-uv@v6

    - name: Update version and DOI in CITATION.cff and docs/about/citation.rst
      run: |
        uv run .github/scripts/citation_updater.py CITATION.cff docs/about/citation.rst docs/changelog/index.rst --version=${VERSION} --doi=${DOI}
        git add .
        git commit -m "Update version & DOI in CITATION.cff & citation.rst"

    - name: Build the changelog with towncrier if not a prerelease
      run: |
        if [[ ${VERSION} =~ ^2[0-9]{3}\.[0-9]+\.[0-9]+$ ]]; then
        uvx nox -s "changelog(final)" -- ${VERSION}
        git add .
        git commit --allow-empty -m "Build changelog for ${VERSION}"
        fi
      env:
        VERSION: ${{ github.event.inputs.version }}

    - name: Apply changes from pre-commit, if necessary
      run: |
        pre-commit run --all-files  # fails if changes are needed
        git add .
        git commit -m "Apply any needed changes from pre-commit"  # fails if no changes are needed
      continue-on-error: true

    - name: Tag the release
      run: |
        git tag "v${VERSION}" -m "Version v${VERSION}"
        git show "v${VERSION}"
      env:
        VERSION: ${{ github.event.inputs.version }}

#    - name: Push tag, branch state
#      run: |
#        git push -u origin $VERSION $BRANCH
